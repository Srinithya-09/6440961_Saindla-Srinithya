// 1. JavaScript Basics & Setup
console.log("Welcome to the Community Portal");
window.onload = function() {
    alert("Page fully loaded");
};

// 2. Syntax, Data Types, and Operators
const eventName = "Community Clean-Up";
const eventDate = "2023-10-15";
let availableSeats = 50;
const eventInfo = `Event: ${eventName}, Date: ${eventDate}, Seats Available: ${availableSeats}`;
console.log(eventInfo);
availableSeats++;

// 3. Conditionals, Loops, and Error Handling
const events = [
    { name: "Community Clean-Up", date: "2023-10-15", seats: 50 },
    { name: "Past Event", date: "2022-10-15", seats: 0 }
];

events.forEach(event => {
    if (new Date(event.date) > new Date() && event.seats > 0) {
        console.log(event.name);
    }
});

function registerUser(event) {
    try {
        if (event.seats > 0) {
            event.seats--;
            console.log("Registration successful!");
        } else {
            throw new Error("No seats available");
        }
    } catch (error) {
        console.error(error.message);
    }
}

// 4. Functions, Scope, Closures, Higher-Order Functions
function addEvent(name, date, seats) {
    return { name, date, seats };
}

function filterEventsByCategory(events, category) {
    return events.filter(event => event.category === category);
}

let totalRegistrations = 0;
function registerUserClosure() {
    return function() {
        totalRegistrations++;
    };
}

// 5. Objects and Prototypes
function Event(name, date, seats) {
    this.name = name;
    this.date = date;
    this.seats = seats;
}

Event.prototype.checkAvailability = function() {
    return this.seats > 0;
};

const event1 = new Event("Workshop on Baking", "2023-11-01", 30);
console.log(Object.entries(event1));

// 6. Arrays and Methods
const communityEvents = [];
communityEvents.push(event1);
const musicEvents = communityEvents.filter(event => event.category === "Music");
const eventCards = musicEvents.map(event => `${event.name} on ${event.date}`);

// 7. DOM Manipulation
const eventContainer = document.querySelector("#eventContainer");
musicEvents.forEach(event => {
    const eventCard = document.createElement("div");
    eventCard.textContent = event.name;
    eventContainer.appendChild(eventCard);
});

// 8. Event Handling
document.querySelector("#registerBtn").onclick = function() {
    console.log("Register button clicked");
};

document.querySelector("#categoryFilter").onchange = function() {
    console.log("Category changed");
};

document.querySelector("#searchInput").onkeydown = function(event) {
    if (event.key === "Enter") {
        console.log("Search initiated");
    }
};

// 9. Async JS, Promises, Async/Await
fetch("https://mockapi.com/events")
    .then(response => response.json())
    .then(data => console.log(data))
    .catch(error => console.error("Error fetching events:", error));

async function fetchEvents() {
    try {
        const response = await fetch("https://mockapi.com/events");
        const data = await response.json();
        console.log(data);
    } catch (error) {
        console.error("Error fetching events:", error);
    }
}

// 10. Modern JavaScript Features
const addEventWithDefaults = (name, date = "2023-10-15", seats = 50) => {
    return { name, date, seats };
};

const { name, date } = addEventWithDefaults("Community Clean-Up");
const clonedEvents = [...communityEvents];

// 11. Working with Forms
document.querySelector("#registrationForm").onsubmit = function(event) {
    event.preventDefault();
    const name = this.elements["name"].value;
    const email = this.elements["email"].value;
    const selectedEvent = this.elements["event"].value;
    if (!name || !email) {
        console.error("Please fill in all fields");
    }
};

// 12. AJAX & Fetch API
fetch("https://mockapi.com/register", {
    method: "POST",
    body: JSON.stringify({ name, email }),
    headers: { "Content-Type": "application/json" }
})
.then(response => response.json())
.then(data => console.log("Registration successful:", data))
.catch(error => console.error("Registration failed:", error));

setTimeout(() => {
    console.log("Response received");
}, 2000);

// 13. Debugging and Testing
console.log("Form submission steps:");
console.log("Name:", name);
console.log("Email:", email);

// 14. jQuery and JS Frameworks
$('#registerBtn').click(() => {
    console.log("Register button clicked with jQuery");
});
$('.eventCard').fadeIn();
